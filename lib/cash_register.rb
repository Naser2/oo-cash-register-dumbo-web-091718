
class CashRegister
 attr_accessor :discount, :price , :item, :total
 #NOTICE: total not needed it accessor to create a discount
 #&& 'll be overridden by the next @total I define later on But since generated by test i 'll leave it'
  def initialize(discount=nil)
    @total = 0
    @discount = discount
  end

  def add_item(title, price, quantity=1)
    self.total += price * quantity
  end

  def apply_discount
    discount = (total/100.00)
   unless discount == 0
    self.total = total-(total/100.00)
    "After the discount, the total comes to $#{@total.to_i}."
   else
     "There is no discount to apply."
   end
 end 
end

#
# attr_accessor :discount, :total
#   def initialize(discount=nil)
#    @discount = discount
#    @total = 0
#  end
#   def add_item(item, price, amount=1)
#    # binding.pry
#    self.total += price * amount
#  end
#   def apply_discount
#    # binding.pry
#    if discount > 0 && total
#      self.total = (self.total * ((100.0 - discount.to_f)/100)).to_i
#    else
#      self.total
#    end
#  end
# end
