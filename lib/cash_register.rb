
class CashRegister
 attr_accessor :discount, :prices , :items, :total
 #NOTICE: total not needed it accessor to create a discount
 #&& 'll be overridden by the next @total I define later on But since generated by test i 'll leave it'
    def initialize(discount=nil)
      @total = 0
      @discount = discount
      @items =  []
      @prices = []
      # @employee_discount = employee_discount
    end

    def add_item(name, price, quantity=1)
      quantity.times {|item| @items << name}
      self.prices << price

      self.total += price * quantity
      @items
    end

    def apply_discount
      # @apply = @total * (@discount/100.00)
      unless discount == nil
         self.total = @total-(@total*(discount/100.00))
      "After the discount, the total comes to $#{@total.to_i}."
      else
       "There is no discount to apply."
     end
    end
   #

    def items
    @items
    end

     # def transaction
     #   self.trans = self.prices.merge(self.items)
     # end

    def void_last_transaction
      # expect{cash_register.void_last_transaction}.to change{cash_register.total}.from(1.76).to(0.0)
     self.total -= @total
    end
end
